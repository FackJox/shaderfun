/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Nikolai Jonasson (https://sketchfab.com/nikolaijonasson)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/female-marble-statue-polished-but-old-41b024813afd49fb827d942219d89b93
title: Female Marble Statue (Polished but old)
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF, shaderMaterial, useTexture } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { extend, useFrame, Object3DNode } from "@react-three/fiber";
import { RepeatWrapping, Texture } from 'three'


import vertex from "../glsl/vertex.vert";
import fragment from "../glsl/fragment.frag";
import {
	MeshBasicMaterial,
	MeshPhysicalMaterial,
	MeshNormalMaterial,
	MeshToonMaterial,
	MeshStandardMaterial,
	MeshPhongMaterial,
	MeshLambertMaterial,
	MeshMatcapMaterial,
	MeshDepthMaterial,
} from "three";
import { useControls } from "leva";

type GLTFResult = GLTF & {
	nodes: {
		defaultMaterial: THREE.Mesh;
		defaultMaterial_1: THREE.Mesh;
	};
	materials: {
		Eye_brown: THREE.MeshStandardMaterial;
		Material_001: THREE.MeshStandardMaterial;
	};
};

type WomanMaterial = {
  uTime: number;
  uBrightness: number;
  uTexture: THREE.Texture;
  uNormal: THREE.Texture;
  uDisplacement: THREE.Texture;
  uRoughness: THREE.Texture;
};

type textureMapping = {
  wrapT: number,
  wrapS: number
}

declare module "@react-three/fiber" {
  interface ThreeElements {
    womanMaterial: Object3DNode<WomanMaterial, typeof WomanMaterial>;
  }
}

const WomanMaterial = shaderMaterial({
  uBrightness: 0,
  uTexture: new THREE.Texture(),
  uDisplacement: new THREE.Texture(),
  uRoughness: new THREE.Texture(),
},
vertex,
fragment
)
extend({ WomanMaterial })

export function Female(props: JSX.IntrinsicElements["group"]) {
	const { nodes, materials } = useGLTF(
		"female_marble_statue_polished_but_old.glb"
	) as unknown as GLTFResult;

	const womanMaterialRef = useRef<WomanMaterial | null>(null);

  const size = 1000
  const textureRepeat = size / 2 / 2
  const womanTextureDiff = useTexture( "/textures/aerial_rocks_02_diff_1k.jpg", (texture: any) => {
    texture.wrapS = texture.wrapT = RepeatWrapping
    womanTextureDiff.repeat.set(textureRepeat, textureRepeat)

  });
  
  // const [womanTextureDiff, womanTextureDisp, womanTextureRough] = useTexture([
  //   "/textures/aerial_rocks_02_diff_1k.jpg",
  //   "/textures/aerial_rocks_02_disp_1k.png",
  //   "/textures/aerial_rocks_02_rough_1k.jpg",
  // ], ([...t]) => {
  //   t.wrapS = t.wrapT = RepeatWrapping
  //   womanTextureDiff.repeat.set(textureRepeat, textureRepeat)

  // });
  


	// useFrame((state, delta ) => {
	//   womanMaterial.current.uTime += delta
	// })

const ambient = 2

	console.log(womanTextureDiff);

	return (
		<group
			{...props}
			dispose={null}
		>
			<group
				rotation={[-Math.PI / 2, 0, 0]}
				scale={0.93}
				position={[1, 0, 0]}
			>
				<group rotation={[Math.PI / 2, 0, 0]}>
					<mesh
						castShadow
						receiveShadow
						geometry={nodes.defaultMaterial.geometry}
						material={materials.Eye_brown}
					/>
					<mesh
						castShadow
						receiveShadow
						geometry={nodes.defaultMaterial_1.geometry}
						// material={materials.Material_001}
					>
						<womanMaterial
							ref={womanMaterialRef}
              uBrightness={ambient}							
               uTexture={womanTextureDiff}
							// uRoughness={womanTextureRough}
							// uDisplacement={womanTextureDisp}
						/>
					</mesh>
				</group>
			</group>
		</group>
	);
}

useGLTF.preload("female_marble_statue_polished_but_old.glb");
